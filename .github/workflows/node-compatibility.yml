name: Node.js Compatibility Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]

    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build package
      run: npm run build
      
    - name: Test package
      run: npm test
      
    - name: Validate DATA_DIR environment variable
      timeout-minutes: 2
      run: |
        # Create test data directory
        mkdir -p ./test-data
        
        # Set DATA_DIR and run check-env command
        DATA_DIR=./test-data node dist/cli.js check-env
        
        # Verify data directory was created
        if [ -d "./test-data" ]; then
          echo "✅ Data directory was created successfully"
        else
          echo "❌ Failed to create data directory"
          exit 1
        fi
        
    - name: Test server startup
      timeout-minutes: 3
      run: |
        # Create a script to start the server and then exit after a few seconds
        cat > test-server-startup.js << 'EOF'
        const { spawn } = require('child_process');
        const server = spawn('node', ['dist/cli.js', 'start'], {
          env: { ...process.env, DATA_DIR: './test-data' },
          stdio: 'inherit'
        });
        
        console.log('Starting server...');
        
        // Give the server a few seconds to start
        setTimeout(() => {
          console.log('Server started successfully, shutting down...');
          server.kill();
          process.exit(0);
        }, 5000);
        
        // Handle server errors
        server.on('error', (err) => {
          console.error('Server failed to start:', err);
          process.exit(1);
        });
        
        // Handle server exit
        server.on('exit', (code) => {
          if (code !== null && code !== 0) {
            console.error(`Server exited with code ${code}`);
            process.exit(code);
          }
        });
        EOF
        
        # Run the test script
        node test-server-startup.js
