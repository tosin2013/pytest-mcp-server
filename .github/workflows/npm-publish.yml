name: Publish to npm.js

on:
  release:
    types: [created]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (e.g., 1.0.0)'
        required: true

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run tests
        run: npm test
        
      - name: Build package
        run: npm run build
        
      - name: Update version (from workflow dispatch)
        if: github.event_name == 'workflow_dispatch'
        run: |
          # Get current version from package.json
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          # Only update if versions are different
          if [ "$CURRENT_VERSION" != "${{ github.event.inputs.version }}" ]; then
            npm version ${{ github.event.inputs.version }} --no-git-tag-version
          else
            echo "Version is already $CURRENT_VERSION, skipping version update"
          fi
        
      - name: Update version (from release)
        if: github.event_name == 'release'
        run: |
          VERSION=$(echo ${{ github.ref }} | sed 's/refs\/tags\/v//')
          # Get current version from package.json
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          # Only update if versions are different
          if [ "$CURRENT_VERSION" != "$VERSION" ]; then
            npm version $VERSION --no-git-tag-version
          else
            echo "Version is already $CURRENT_VERSION, skipping version update"
          fi
        
      - name: Publish to npm.js
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          
      - name: Generate changelog
        id: changelog
        uses: metcalfc/changelog-generator@v4.0.1
        with:
          myToken: ${{ secrets.GH_TOKEN }}
          
      - name: Update release with changelog
        if: github.event_name == 'release'
        uses: softprops/action-gh-release@v1
        with:
          body: |
            ## Changelog
            ${{ steps.changelog.outputs.changelog }}
            
            ## Installation
            ```
            npm install pytest-mcp-server
            ```
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }} 